[tool.poetry]
name = "backend"
version = "0.1.0"
description = "API to study Strawberry wiht Django"
authors = ["menegasse <menegassehugo12@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
Django = "^4.0.1"
strawberry-graphql-django = "^0.2.5"
black = "^22.1.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
factory-boy = "^3.2.1"
django-types = "^0.15.0"
django-guardian = "^2.4.0"
pytest-django = "^4.5.2"
django-configurations = "^2.3.2"
pytest-cov = "^3.0.0"
django-debug-toolbar = "^3.2.4"
django-extensions = "^3.1.5"
strawberry-django-plus = "^1.6"

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
py_version = 310
multi_line_output = 3
force_sort_within_sections = true

[tool.pyright]
pythonVersion = "3.10"
pythonPlatform = "Linux"
useLibraryCodeForTypes = true
ignore = ["**/migrations"]
reportCallInDefaultInitializer = "warning"
reportMatchNotExhaustive = "warning"
reportMissingSuperCall = "warning"
reportOverlappingOverload = "warning"
reportUninitializedInstanceVariable = "none"
reportUnnecessaryCast = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUntypedNamedTuple = "error"
strictDictionaryInference = "error"
strictListInference = "error"
strictSetInference = "error"
reportUnusedExpression = "warning"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "api.settings"
DJANGO_CONFIGURATION = "Tests"
addopts = "-p no:warnings --nomigrations --cov=api/tests --cov-report term-missing:skip-covered"